/* esm.sh - yaml@2.7.1/browser/dist/doc/createNode */
import{Alias as O}from"../nodes/Alias.mjs";import{isNode as g,isPair as j,MAP as h,SEQ as y,isDocument as a}from"../nodes/identity.mjs";import{Scalar as b}from"../nodes/Scalar.mjs";var S="tag:yaml.org,2002:";function w(n,i,o){if(i){let r=o.filter(e=>e.tag===i),c=r.find(e=>!e.format)??r[0];if(!c)throw new Error(`Tag ${i} not found`);return c}return o.find(r=>r.identify?.(n)&&!r.format)}function P(n,i,o){if(a(n)&&(n=n.contents),g(n))return n;if(j(n)){let s=o.schema[h].createNode?.(o.schema,null,o);return s.items.push(n),s}(n instanceof String||n instanceof Number||n instanceof Boolean||typeof BigInt<"u"&&n instanceof BigInt)&&(n=n.valueOf());let{aliasDuplicateObjects:r,onAnchor:c,onTagObj:e,schema:d,sourceObjects:p}=o,t;if(r&&n&&typeof n=="object"){if(t=p.get(n),t)return t.anchor||(t.anchor=c(n)),new O(t.anchor);t={anchor:null,node:null},p.set(n,t)}i?.startsWith("!!")&&(i=S+i.slice(2));let f=w(n,i,d.tags);if(!f){if(n&&typeof n.toJSON=="function"&&(n=n.toJSON()),!n||typeof n!="object"){let s=new b(n);return t&&(t.node=s),s}f=n instanceof Map?d[h]:Symbol.iterator in Object(n)?d[y]:d[h]}e&&(e(f),delete o.onTagObj);let m=f?.createNode?f.createNode(o.schema,n,o):typeof f?.nodeClass?.from=="function"?f.nodeClass.from(o.schema,n,o):new b(n);return i?m.tag=i:f.default||(m.tag=f.tag),t&&(t.node=m),m}export{P as createNode};
//# sourceMappingURL=createNode.mjs.map