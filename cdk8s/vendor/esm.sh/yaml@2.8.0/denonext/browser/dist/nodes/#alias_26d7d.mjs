/* esm.sh - yaml@2.8.0/browser/dist/nodes/Alias */
import{anchorIsValid as h}from"../doc/anchors.mjs";import{visit as m}from"../visit.mjs";import{ALIAS as p,isAlias as f,isCollection as v,isPair as g,hasAnchor as C}from"./identity.mjs";import{NodeBase as w}from"./Node.mjs";import{toJS as d}from"./toJS.mjs";var l=class extends w{constructor(s){super(p),this.source=s,Object.defineProperty(this,"tag",{set(){throw new Error("Alias nodes cannot have tags")}})}resolve(s,r){let e;r?.aliasResolveCache?e=r.aliasResolveCache:(e=[],m(s,{Node:(t,n)=>{(f(n)||C(n))&&e.push(n)}}),r&&(r.aliasResolveCache=e));let o;for(let t of e){if(t===this)break;t.anchor===this.source&&(o=t)}return o}toJSON(s,r){if(!r)return{source:this.source};let{anchors:e,doc:o,maxAliasCount:t}=r,n=this.resolve(o,r);if(!n){let c=`Unresolved alias (the anchor must be set before the alias): ${this.source}`;throw new ReferenceError(c)}let i=e.get(n);if(i||(d(n,null,r),i=e.get(n)),!i||i.res===void 0){let c="This should not happen: Alias anchor was not resolved?";throw new ReferenceError(c)}if(t>=0&&(i.count+=1,i.aliasCount===0&&(i.aliasCount=u(o,n,e)),i.count*i.aliasCount>t)){let c="Excessive alias count indicates a resource exhaustion attack";throw new ReferenceError(c)}return i.res}toString(s,r,e){let o=`*${this.source}`;if(s){if(h(this.source),s.options.verifyAliasOrder&&!s.anchors.has(this.source)){let t=`Unresolved alias (the anchor must be set before the alias): ${this.source}`;throw new Error(t)}if(s.implicitKey)return`${o} `}return o}};function u(a,s,r){if(f(s)){let e=s.resolve(a),o=r&&e&&r.get(e);return o?o.count*o.aliasCount:0}else if(v(s)){let e=0;for(let o of s.items){let t=u(a,o,r);t>e&&(e=t)}return e}else if(g(s)){let e=u(a,s.key,r),o=u(a,s.value,r);return Math.max(e,o)}return 1}export{l as Alias};
//# sourceMappingURL=Alias.mjs.map