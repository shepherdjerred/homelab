/* esm.sh - yaml@2.7.0/browser/dist/nodes/Alias */
import{anchorIsValid as h}from"../doc/anchors.mjs";import{visit as f}from"../visit.mjs";import{ALIAS as m,isAlias as p,isCollection as g,isPair as v}from"./identity.mjs";import{NodeBase as w}from"./Node.mjs";import{toJS as C}from"./toJS.mjs";var l=class extends w{constructor(e){super(m),this.source=e,Object.defineProperty(this,"tag",{set(){throw new Error("Alias nodes cannot have tags")}})}resolve(e){let s;return f(e,{Node:(r,t)=>{if(t===this)return f.BREAK;t.anchor===this.source&&(s=t)}}),s}toJSON(e,s){if(!s)return{source:this.source};let{anchors:r,doc:t,maxAliasCount:i}=s,a=this.resolve(t);if(!a){let c=`Unresolved alias (the anchor must be set before the alias): ${this.source}`;throw new ReferenceError(c)}let o=r.get(a);if(o||(C(a,null,s),o=r.get(a)),!o||o.res===void 0){let c="This should not happen: Alias anchor was not resolved?";throw new ReferenceError(c)}if(i>=0&&(o.count+=1,o.aliasCount===0&&(o.aliasCount=u(t,a,r)),o.count*o.aliasCount>i)){let c="Excessive alias count indicates a resource exhaustion attack";throw new ReferenceError(c)}return o.res}toString(e,s,r){let t=`*${this.source}`;if(e){if(h(this.source),e.options.verifyAliasOrder&&!e.anchors.has(this.source)){let i=`Unresolved alias (the anchor must be set before the alias): ${this.source}`;throw new Error(i)}if(e.implicitKey)return`${t} `}return t}};function u(n,e,s){if(p(e)){let r=e.resolve(n),t=s&&r&&s.get(r);return t?t.count*t.aliasCount:0}else if(g(e)){let r=0;for(let t of e.items){let i=u(n,t,s);i>r&&(r=i)}return r}else if(v(e)){let r=u(n,e.key,s),t=u(n,e.value,s);return Math.max(r,t)}return 1}export{l as Alias};
//# sourceMappingURL=Alias.mjs.map